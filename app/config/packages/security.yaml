security:
    password_hashers:
      Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'bcrypt'
    
    providers:
      databaseUser:
        entity:
          class: App\Entity\User
    
    role_hierarchy:
      ROLE_USER: [IS_AUTHENTICATED_FULLY]
      ROLE_ADMIN: [ROLE_USER]
    
    firewalls:
        dev:
            pattern:
              - ^/_profiler/
              - ^/_wdt/
              - ^/css/
              - ^/images/
              - ^/js/
              - ^/bootstrap-5.3.3-dist/
            security: false
        main:
            lazy: true
            provider: databaseUser
            user_checker: App\Security\UserChecker
            entry_point: App\Security\AuthenticationEntryPoint
            custom_authenticators:
              - App\Security\AppFormLoginAuthenticator
              - App\Security\GoogleAuthenticator
            logout:
                path: security_logout
                target: security_login
              
            remember_me:
                secret: '%kernel.secret%'
                lifetime: 604800
                path: /

    access_control:
         - { path: ^/ap/, roles: ROLE_ADMIN }
         - { path: ^/[cp/|p/|u/], roles: ROLE_USER }

#when@test:
#    security:
#        password_hashers:
#            # By default, password hashers are resource intensive and take time. This is
#            # important to generate secure password hashes. In tests however, secure hashes
#            # are not important, waste resources and increase test times. The following
#            # reduces the work factor to the lowest possible values.
#            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
#                algorithm: auto
#                cost: 4 # Lowest possible value for bcrypt
#                time_cost: 3 # Lowest possible value for argon
#                memory_cost: 10 # Lowest possible value for argon
