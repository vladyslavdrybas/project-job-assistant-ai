# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  no: false
  yes: true
  table_prefix: '%env(DATABASE_TABLES_PREFIX)%_'
  api_version: '%env(API_VERSION)%'
  service_name: '%env(SERVICE_NAME)%'
  app_name: '%env(APP_NAME)%'
  app_secret: '%env(APP_SECRET)%'
  hash_secret: '%env(HASH_SECRET)%'
  
  app_title: 'Vladyslav Drybas Portfolio'
    
  security_is_register_open: '%env(default:no:bool:SECURITY_IS_REGISTER_OPEN)%'
  email_default: 'vlad.drybas@gmail.com'
  email_is_active: '%env(default:no:bool:EMAIL_IS_ACTIVE)%'
  email_request_call_back_enable: '%env(default:no:bool:EMAIL_REQUEST_CALL_BACK_ENABLE)%'
  email_admin: '%env(default:email_default:string:EMAIL_ADMIN)%'
  email_autoreply: '%env(default:email_default:string:EMAIL_AUTOREPLY)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
          'string $projectDir': '%kernel.project_dir%'
          'string $projectEnvironment': '%kernel.environment%'
          'string $appName': '%app_name%'
          'string $appTitle': '%app_title%'
          
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    
    App\Event\Listener\TablePrefixListener:
      arguments:
        - '%table_prefix%'
      tags:
        - { name: doctrine.event_listener, event: loadClassMetadata, method: loadClassMetadata }
    
    Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer:
      class: Symfony\Component\Serializer\Normalizer\GetSetMethodNormalizer
      tags: [ serializer.normalizer ]
  
  # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

when@local:
  parameters:
    email_default: 'vlad.drybas@localhost.com'
    email_is_active: '%env(default:yes:bool:EMAIL_IS_ACTIVE)%'
    email_request_call_back_enable: '%env(default:yes:bool:EMAIL_REQUEST_CALL_BACK_ENABLE)%'
    email_admin: '%env(default:email_default:string:EMAIL_ADMIN)%'
    email_autoreply: '%env(default:email_default:string:EMAIL_AUTOREPLY)%'
    
